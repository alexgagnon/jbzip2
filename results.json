{
  "results": [
    {
      "command": "jq -rn --stream 'fromstream(1|truncate_stream(inputs)) | select((.type == \"item\") and (.labels | has(\"en\")) and (.claims.P31 // [] | map(.mainsnak.datavalue.value.id != \"Q13442814\") | all)) | (.id|ltrimstr(\"Q\")) as $id | .labels[\"en\"].value, (.aliases[\"en\"] // [] | map(.value))[] | [., $id] | @tsv' ./samples/data/1.json",
      "mean": 0.52031376618,
      "stddev": null,
      "median": 0.52031376618,
      "user": 0.52057636,
      "system": 0.0,
      "min": 0.52031376618,
      "max": 0.52031376618,
      "times": [
        0.52031376618
      ],
      "exit_codes": [
        0
      ],
      "parameters": {
        "filter": "select((.type == \"item\") and (.labels | has(\"en\")) and (.claims.P31 // [] | map(.mainsnak.datavalue.value.id != \"Q13442814\") | all)) | (.id|ltrimstr(\"Q\")) as $id | .labels[\"en\"].value, (.aliases[\"en\"] // [] | map(.value))[] | [., $id] | @tsv",
        "i": "1"
      }
    },
    {
      "command": "../jstream/jstream -d 1 < ./samples/data/1.json | jq -r 'select((.type == \"item\") and (.labels | has(\"en\")) and (.claims.P31 // [] | map(.mainsnak.datavalue.value.id != \"Q13442814\") | all)) | (.id|ltrimstr(\"Q\")) as $id | .labels[\"en\"].value, (.aliases[\"en\"] // [] | map(.value))[] | [., $id] | @tsv'",
      "mean": 0.054985054180000006,
      "stddev": null,
      "median": 0.054985054180000006,
      "user": 0.08473336000000001,
      "system": 0.019471179999999998,
      "min": 0.054985054180000006,
      "max": 0.054985054180000006,
      "times": [
        0.054985054180000006
      ],
      "exit_codes": [
        0
      ],
      "parameters": {
        "filter": "select((.type == \"item\") and (.labels | has(\"en\")) and (.claims.P31 // [] | map(.mainsnak.datavalue.value.id != \"Q13442814\") | all)) | (.id|ltrimstr(\"Q\")) as $id | .labels[\"en\"].value, (.aliases[\"en\"] // [] | map(.value))[] | [., $id] | @tsv",
        "i": "1"
      }
    }
  ]
}
